// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTesting using AI Type Open AI and AI Model gpt-4-1106-preview

ROOST_METHOD_HASH=kelvinToCelcius_c4e254281d
ROOST_METHOD_SIG_HASH=kelvinToCelcius_5ac945d542


*/

// ********RoostGPT********
# Write the updated Jest test case and save it to a new file: __tests__/fetch-weather.test.js

# Define the content of the Jest test case file
jest_test_case_content = """
// Create a new file: __tests__/fetch-weather.test.js
import { kelvinToCelsius } from '../fetch-weather';

describe('kelvinToCelsius', () => {
  beforeAll(() => {
    // Setup if necessary before all tests are run
  });

  afterAll(() => {
    // Cleanup if necessary after all tests are run
  });

  beforeEach(() => {
    // Setup before each test if necessary
  });

  afterEach(() => {
    // Cleanup after each test if necessary
  });

  test('converts Kelvin to Celsius correctly for positive values', () => {
    expect(kelvinToCelsius(300)).toBe(26.85); // 300K is approximately 26.85°C
  });

  test('converts Kelvin to Celsius correctly for negative values', () => {
    throw new Error('Kelvin temperature cannot be negative.'); // Negative Kelvin is not physically meaningful
  });

  test('converts Kelvin to Celsius correctly for zero', () => {
    expect(kelvinToCelsius(0)).toBe(-273.15); // 0K is -273.15°C
  });

  test('handles non-numeric input by throwing an error', () => {
    expect(() => {
      kelvinToCelsius('a string');
    }).toThrow();
  });

  test('handles null input by throwing an error', () => {
    expect(() => {
      kelvinToCelsius(null);
    }).toThrow();
  });

  test('handles undefined input by throwing an error', () => {
    expect(() => {
      kelvinToCelsius(undefined);
    }).toThrow();
  });
});
"""

# Save the test case to a file
jest_test_case_file_path = '/mnt/data/__tests__/fetch-weather.test.js'
with open(jest_test_case_file_path, 'w') as file:
    file.write(jest_test_case_content)

jest_test_case_file_path

