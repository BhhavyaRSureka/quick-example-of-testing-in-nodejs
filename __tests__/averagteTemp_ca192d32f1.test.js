// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTesting using AI Type Open AI and AI Model gpt-4-1106-preview

ROOST_METHOD_HASH=averagteTemp_aab1d2fafe
ROOST_METHOD_SIG_HASH=averagteTemp_ca192d32f1


*/

// ********RoostGPT********
// __tests__/prepared-for-the-weather.test.js

const { averagteTemp } = require('../prepared-for-the-weather');

describe('averageTemp', () => {
  test('should accurately calculate the average of two numbers', () => {
    expect(averagteTemp(20, 30)).toBe(25);
  });

  test('should compute the average when one number is negative', () => {
    expect(averagteTemp(-10, 30)).toBe(10);
  });

  test('should compute the average when both numbers are negative', () => {
    expect(averagteTemp(-20, -10)).toBe(-15);
  });

  test('should return NaN if one of the arguments is not a number', () => {
    expect(averagteTemp('a', 30)).toBeNaN();
  });

  test('should return NaN if both arguments are not numbers', () => {
    expect(averagteTemp('a', 'b')).toBeNaN();
  });

  test('should handle edge case where min and max are both zero', () => {
    expect(averagteTemp(0, 0)).toBe(0);
  });
});

